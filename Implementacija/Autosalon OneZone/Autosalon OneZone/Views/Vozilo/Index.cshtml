@using Microsoft.AspNetCore.Identity
@inject SignInManager<Autosalon_OneZone.Models.ApplicationUser> SignInManager
@inject UserManager<Autosalon_OneZone.Models.ApplicationUser> UserManager


@model IEnumerable<Autosalon_OneZone.Models.Vozilo>
@{
    ViewData["Title"] = "Vozila";
    var currentYear = DateTime.Now.Year;
}
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />


@* Show search info if search was performed *@
@if (!string.IsNullOrEmpty(ViewData["SearchTerm"] as string))
{
    <div class="alert alert-info">
        Rezultati pretrage za: <strong>@ViewData["SearchTerm"]</strong>
    </div>
}

<div class="container mb-4">
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0 me-3">Filteri i sortiranje</h5>
            <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-toggle="collapse" data-bs-target="#filterCollapse">
                <i class="bi bi-funnel"></i> Prikaži/sakrij filtere
            </button>
        </div>

        <div class="collapse" id="filterCollapse">
            <div class="card-body">
                <form id="filterForm" method="get" action="@Url.Action("Index", "Vozilo")">
                    @if (!string.IsNullOrEmpty(ViewData["SearchTerm"] as string))
                    {
                        <input type="hidden" name="searchTerm" value="@ViewData["SearchTerm"]" />
                    }

                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="sortOrder" class="form-label">Sortiranje:</label>
                            <select class="form-select" id="sortOrder" name="sortOrder">
                                @if (ViewData["CurrentSort"] == null)
                                {
                                    <option value="" selected>Naziv (A-Z)</option>
                                }
                                else
                                {
                                    <option value="">Naziv (A-Z)</option>
                                }

                                @if (ViewData["CurrentSort"]?.ToString() == "name_desc")
                                {
                                    <option value="name_desc" selected>Naziv (Z-A)</option>
                                }
                                else
                                {
                                    <option value="name_desc">Naziv (Z-A)</option>
                                }

                                @if (ViewData["CurrentSort"]?.ToString() == "price")
                                {
                                    <option value="price" selected>Cijena (rastuće)</option>
                                }
                                else
                                {
                                    <option value="price">Cijena (rastuće)</option>
                                }

                                @if (ViewData["CurrentSort"]?.ToString() == "price_desc")
                                {
                                    <option value="price_desc" selected>Cijena (opadajuće)</option>
                                }
                                else
                                {
                                    <option value="price_desc">Cijena (opadajuće)</option>
                                }

                                @if (ViewData["CurrentSort"]?.ToString() == "year")
                                {
                                    <option value="year" selected>Godište (rastuće)</option>
                                }
                                else
                                {
                                    <option value="year">Godište (rastuće)</option>
                                }

                                @if (ViewData["CurrentSort"]?.ToString() == "year_desc")
                                {
                                    <option value="year_desc" selected>Godište (opadajuće)</option>
                                }
                                else
                                {
                                    <option value="year_desc">Godište (opadajuće)</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <!-- Godište filter -->
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Godište:</label>
                            <div class="input-group">
                                <input type="number" class="form-control" placeholder="Od" id="godisteOd" name="godisteOd"
                                       min="1900" max="@currentYear" value="@ViewData["GodisteOd"]">
                                <input type="number" class="form-control" placeholder="Do" id="godisteDo" name="godisteDo"
                                       min="1900" max="@currentYear" value="@ViewData["GodisteDo"]">
                                <button type="button" class="btn btn-outline-secondary" onclick="clearFilter('godisteOd', 'godisteDo')">
                                    Očisti
                                </button>
                            </div>
                        </div>

                        <!-- Gorivo filter -->
                        <div class="col-md-4 mb-3">
                            <label for="gorivo" class="form-label">Gorivo:</label>
                            <div class="input-group">
                                <select class="form-select" id="gorivo" name="gorivo">
                                    <option value="">-- Sva goriva --</option>
                                    @{
                                        var gorivoOptions = new[] { "Benzin", "Dizel", "Plin", "Elektro", "Hibrid" };
                                        foreach (var option in gorivoOptions)
                                        {
                                            var isSelected = ViewData["Gorivo"]?.ToString() == option;
                                            @if (isSelected)
                                            {
                                                <option value="@option" selected>@option</option>
                                            }
                                            else
                                            {
                                                <option value="@option">@option</option>
                                            }
                                        }
                                    }
                                </select>
                                <button type="button" class="btn btn-outline-secondary" onclick="clearFilter('gorivo')">
                                    Očisti
                                </button>
                            </div>
                        </div>

                        <!-- Boja filter -->
                        <div class="col-md-4 mb-3">
                            <label for="boja" class="form-label">Boja:</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="boja" name="boja" placeholder="Unesite boju"
                                       value="@ViewData["Boja"]">
                                <button type="button" class="btn btn-outline-secondary" onclick="clearFilter('boja')">
                                    Očisti
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <!-- Kubikaža filter -->
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Kubikaža:</label>
                            <div class="input-group">
                                <input type="number" step="0.1" min="0.1" class="form-control" placeholder="Od" id="kubikazaOd"
                                       name="kubikazaOd" value="@ViewData["KubikazaOd"]">
                                <input type="number" step="0.1" min="0.1" class="form-control" placeholder="Do" id="kubikazaDo"
                                       name="kubikazaDo" value="@ViewData["KubikazaDo"]">
                                <button type="button" class="btn btn-outline-secondary" onclick="clearFilter('kubikazaOd', 'kubikazaDo')">
                                    Očisti
                                </button>
                            </div>
                        </div>

                        <!-- Kilometraža filter -->
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Kilometraža:</label>
                            <div class="input-group">
                                <input type="number" min="0" class="form-control" placeholder="Od" id="kilometrazaOd"
                                       name="kilometrazaOd" value="@ViewData["KilometrazaOd"]">
                                <input type="number" min="0" class="form-control" placeholder="Do" id="kilometrazaDo"
                                       name="kilometrazaDo" value="@ViewData["KilometrazaDo"]">
                                <button type="button" class="btn btn-outline-secondary" onclick="clearFilter('kilometrazaOd', 'kilometrazaDo')">
                                    Očisti
                                </button>
                            </div>
                        </div>

                        <!-- Cijena filter -->
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Cijena (€):</label>
                            <div class="input-group">
                                <input type="number" min="0" class="form-control" placeholder="Od" id="cijenaOd"
                                       name="cijenaOd" value="@ViewData["CijenaOd"]">
                                <input type="number" min="0" class="form-control" placeholder="Do" id="cijenaDo"
                                       name="cijenaDo" value="@ViewData["CijenaDo"]">
                                <button type="button" class="btn btn-outline-secondary" onclick="clearFilter('cijenaOd', 'cijenaDo')">
                                    Očisti
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-funnel"></i> Primijeni filtere
                        </button>
                        <button type="button" id="clearAllFilters" class="btn btn-danger">
                            Očisti sve filtere
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



<style>
    /* Add this to control the overall card container padding */
    .card-container {
        padding-left: 30px;
        padding-right: 30px;
    }

    /* Style for the results count text */
    .results-count {
        font-size: 1.25rem;
        font-weight: 500;
        margin-bottom: 1rem;
        padding-left: 30px;
        padding-right: 30px;
    }

    .vehicle-card {
        transition: transform 0.2s;
        overflow: hidden;
        border-radius: 10px;
        position: relative; /* For absolute positioning of button container */
    }

        .vehicle-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

    .vehicle-image {
        width: 240px;
        height: 100%;
        object-fit: cover;
        padding: 15px 0 15px 15px;
        border-radius: 8px;
    }

    .image-container {
        height: 100%;
        display: flex;
        align-items: stretch;
    }

    .vehicle-price {
        font-size: 1.3rem;
        font-weight: bold;
        color: #28a745;
        margin-bottom: 70px; /* Make space for button container */
    }

    /* Increase the font size for vehicle details */
    .vehicle-details {
        font-size: 1.1rem; /* Larger font for details */
    }

    .vehicle-specs {
        width: 120%;
        padding: 20px 0;
    }

    .card-body {
        padding: 0;
        height: 100%; /* Make card body take full height */
        position: relative; /* For positioning children */
    }

    .card-content {
        padding: 10px;
        height: 100%;
    }

    /* Style for the button container at the bottom */
    .button-container {
        padding: 15px;
        position: absolute;
        bottom: 0;
        left: 240px; /* Width of the image */
        right: 0;
    }
</style>

@* Display results count with new class *@
<p class="results-count">Pronađeno @Model.Count() vozila</p>

@if (!Model.Any())
{
    <div class="alert alert-warning">
        Nema vozila koja odgovaraju vašoj pretrazi.
    </div>
}
else
{
    <div class="card-container">
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var vozilo in Model)
            {
                <div class="col">
                    <div class="card vehicle-card h-100">
                        <div class="card-body d-flex p-0">
                            <div class="image-container">
                                @if (!string.IsNullOrEmpty(vozilo.Slika))
                                {
                                    <img src="~/images/vozila/@vozilo.Slika" class="vehicle-image rounded-start" alt="@vozilo.Marka @vozilo.Model">
                                }
                                else
                                {
                                    <img src="~/img/no-image.png" class="vehicle-image rounded-start" alt="Nema slike">
                                }
                            </div>
                            <div class="flex-grow-1">
                                <div class="card-content">
                                    <h5 class="card-title">@vozilo.Marka @vozilo.Model</h5>

                                    <div class="vehicle-specs">
                                        <!-- Vehicle details with larger text -->
                                        <p class="card-text mb-1 vehicle-details">
                                            Godište: @vozilo.Godiste<br>
                                            Gorivo: @vozilo.Gorivo<br>
                                            Boja: @vozilo.Boja<br>
                                            Kubikaža: @vozilo.Kubikaza<br>
                                            Kilometraža: @vozilo.Kilometraza km
                                        </p>
                                        <div class="vehicle-price">€@vozilo.Cijena.Value.ToString("N0")</div>
                                    </div>
                                </div>
                            </div>

                                    <div class="button-container">
            <a href="@Url.Action("Details", "Vozilo", new { id = vozilo.VoziloID })" class="btn btn-primary">Detalji</a>

                                @if (SignInManager.IsSignedIn(User) && User.Identity != null && User.Identity.IsAuthenticated)
                                {
                    <form asp-controller="Korpa" asp-action="DodajUKorpu" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@vozilo.VoziloID" />
                        <button type="submit" class="btn btn-success">Dodaj u korpu</button>
                    </form>
                                }
                                else
                                {
                    <a href="@Url.Action("Login", "Account", new { returnUrl = Context.Request.Path })" class="btn btn-outline-success">
                        Prijava za kupovinu
                    </a>
                                }
        </div>



                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}


@section Scripts {
    <script>
        // Function to clear individual filter fields
        function clearFilter(...fields) {
            fields.forEach(field => {
                document.getElementById(field).value = '';
            });
        }

        $(document).ready(function() {
            // Handle the Clear All Filters button
            $('#clearAllFilters').click(function() {
                // Keep the search term, clear everything else
                var searchTerm = '@ViewData["SearchTerm"]';

                // Reset all filter form fields
                $('#filterForm').find('input:not([name="searchTerm"])').val('');
                $('#filterForm').find('select:not([name="searchTerm"])').val('');

                // Reset sort order to default
                $('#sortOrder').val('');

                // If there was a search term, maintain it
                if (searchTerm) {
                    $('<input>').attr({
                        type: 'hidden',
                        name: 'searchTerm',
                        value: searchTerm
                    }).appendTo('#filterForm');
                }

                // Submit the form
                $('#filterForm').submit();
            });

            // Change event for sort order to auto-submit
            $('#sortOrder').change(function() {
                $('#filterForm').submit();
            });

            // Validation for godište (year range) with fixes:
            // 1. Remove automatic "1900" default
            // 2. Add range validation between Od and Do
            $('#godisteOd, #godisteDo').on('change', function() {
                var min = 1900;
                var max = @currentYear;
                var val = $(this).val() ? parseInt($(this).val()) : '';

                // Only validate if value is entered
                if (val !== '') {
                    if (val < min) {
                        $(this).val(min);
                    } else if (val > max) {
                        $(this).val(max);
                    }

                    // Validate Od <= Do
                    if (this.id === 'godisteOd' && $('#godisteDo').val()) {
                        var doVal = parseInt($('#godisteDo').val());
                        if (val > doVal) {
                            $('#godisteDo').val(val);
                        }
                    }
                    else if (this.id === 'godisteDo' && $('#godisteOd').val()) {
                        var odVal = parseInt($('#godisteOd').val());
                        if (val < odVal) {
                            $('#godisteOd').val(val);
                        }
                    }
                }
            });

            // Add range validation for all other Od-Do fields
            function validateRange(odId, doId) {
                var odVal = $('#' + odId).val() ? parseFloat($('#' + odId).val()) : '';
                var doVal = $('#' + doId).val() ? parseFloat($('#' + doId).val()) : '';

                if (odVal !== '' && doVal !== '' && odVal > doVal) {
                    $('#' + doId).val(odVal);
                }
            }

            // Add validation to other range fields
            $('#kubikazaOd, #kubikazaDo').on('change', function() {
                validateRange('kubikazaOd', 'kubikazaDo');
            });

            $('#kilometrazaOd, #kilometrazaDo').on('change', function() {
                validateRange('kilometrazaOd', 'kilometrazaDo');
            });

            $('#cijenaOd, #cijenaDo').on('change', function() {
                validateRange('cijenaOd', 'cijenaDo');
            });

            // Show filter panel if filters are applied
            if (
                '@ViewData["GodisteOd"]' ||
                '@ViewData["GodisteDo"]' ||
                '@ViewData["Gorivo"]' ||
                '@ViewData["Boja"]' ||
                '@ViewData["KubikazaOd"]' ||
                '@ViewData["KubikazaDo"]' ||
                '@ViewData["KilometrazaOd"]' ||
                '@ViewData["KilometrazaDo"]' ||
                '@ViewData["CijenaOd"]' ||
                '@ViewData["CijenaDo"]'
            ) {
                $('#filterCollapse').addClass('show');
            }
        });
    </script>
}
