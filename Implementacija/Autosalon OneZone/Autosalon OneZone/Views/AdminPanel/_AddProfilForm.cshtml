@* Fajl: Views/AdminPanel/_AddProfilForm.cshtml *@
@model Autosalon_OneZone.ViewModels.Admin.AddProfilViewModel

@* Anti-forgery token radi sigurnosti *@
@Html.AntiForgeryToken()

<form id="add-profil-form" asp-controller="AdminPanel" asp-action="SaveProfil" method="post">
    @* Skriven UserId - koristi se za Edit scenarij (bit će null za Add) *@
    <input type="hidden" asp-for="UserId" />

    <div class="form-group">
        <label asp-for="UserName">Korisničko ime</label>
        <input asp-for="UserName" class="form-control" required />
        <span asp-validation-for="UserName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Email">Email</label>
        <input asp-for="Email" class="form-control" type="email" required />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Ime">Ime</label>
        <input asp-for="Ime" class="form-control" />
        <span asp-validation-for="Ime" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Prezime">Prezime</label>
        <input asp-for="Prezime" class="form-control" />
        <span asp-validation-for="Prezime" class="text-danger"></span>
    </div>

    @* Prikaži polja za lozinku samo ako je novi korisnik (UserId == null) *@
    @if (string.IsNullOrEmpty(Model.UserId))
    {
    <div class="form-group">
        <label asp-for="Password">Lozinka</label>
        <input asp-for="Password" class="form-control" type="password" required />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ConfirmPassword">Potvrda lozinke</label>
        <input asp-for="ConfirmPassword" class="form-control" type="password" required />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>
    }

    @* Opcija za izbor uloga *@
    @if (Model.DostupneRole != null && Model.DostupneRole.Any())
{
    <div class="form-group">
        <label>Uloga:</label><br />
        @foreach (var role in Model.DostupneRole)
        {
        <div class="form-check">
            <input class="form-check-input" type="radio" name="OdabraneRole" value="@role.Name"
                   @(Model.OdabraneRole != null && Model.OdabraneRole.Contains(role.Name) ? "checked" : "") />
            <label class="form-check-label">@role.Name</label>
        </div>
        }
    </div>
}


    <div class="form-group mt-3">
        <button type="submit" class="btn btn-primary">Sačuvaj</button>
        <button type="button" id="cancel-add-profil" class="btn btn-secondary">Otkaži</button>
    </div>
</form>

<script>
    $(document).ready(function () {
        console.log("Profil form script loaded");
        // Sklanjamo prethodne validacijske handlere
        $("#add-profil-form").off();
        // Aktiviranje jQuery validacije
        $("#add-profil-form").validate({
            errorElement: "span",
            errorClass: "text-danger",
            highlight: function (element, errorClass, validClass) {
                $(element).addClass("is-invalid").removeClass("is-valid");
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).addClass("is-valid").removeClass("is-invalid");
            },
            errorPlacement: function (error, element) {
                error.insertAfter(element);
            }
        });
    });
</script>
